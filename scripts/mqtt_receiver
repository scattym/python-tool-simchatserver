import paho.mqtt.client as mqtt
import datetime
import time
import binascii
from sim_chat_lib.geotool_api import camera_api, device_api, common


# The callback for when the client receives a CONNACK response from the server.
def on_connect(client, userdata, flags, rc):
    print("Connected with result code "+str(rc))

    # Subscribing in on_connect() means that if we lose the connection and
    # reconnect then subscriptions will be renewed.
#    client.subscribe("$SYS/#")
    client.subscribe("/devices/#/new_image/#")


# The callback for when a PUBLISH message is received from the server.
def on_message(client, userdata, msg):
    print(msg.topic+" "+binascii.hexlify(msg.payload))
    fields = msg.topic.split('/')
    imei = fields[2]
    camera_number = fields[4]
    filename = fields[5]
    device = device_api.get_device_pk(imei)
    camera_api.add_camera_image(device, 0, camera_number, datetime.datetime.now(), msg.payload)


username = "sysadmin"
password = "apw4sysadmin2u"
common.set_api_host("localhost:8000")

client = mqtt.Client()
client.username_pw_set(username, password=password)
client.on_connect = on_connect
client.on_message = on_message

client.connect("localhost", 65532, 60)

# Blocking call that processes network traffic, dispatches callbacks and
# handles reconnecting.
# Other loop*() functions are available that give a threaded interface and a
# manual interface.
client.loop_forever()
